use crate::meta_models::{Code, VariantValue};

// ====================================================================
// *******************************************************************************
// §2	[[[[ 全体制御コマンド ]]]]
// *******************************************************************************
// ===============================================================================
//
// 	以下のコマンドは、行頭に指定し、全パートに影響する制御や
// 	曲自体の各種定義を行います。
//
// 	"Filename" "Composer" "Extend" 等のアルファベット文字列は、
// 	小文字でも大文字でも構いません。
//
// 	コマンド名と文字列及び数値は、１つ以上の SPACE 又は TAB で区切られて
// 	いる必要があります。
//
// 	1PASS目に処理されるため、MMLファイルのどの位置にあっても構いませんが、
// 	#Memo以外のコマンドを重複指定した場合は、後ろの行にあるものが有効と
// 	なります。
#[derive(Debug, Clone)]
pub struct Macro {
    pub code: Code,
    pub key: String,
    pub value: VariantValue,
}

// ===============================================================================
// §3-1	FM音色定義
// 	@
// -------------------------------------------------------------------------------
// [書式1]	@ 音色番号 ＡＬＧ ＦＢ
// 	 ＡＲ ＤＲ ＳＲ ＲＲ ＳＬ ＴＬ ＫＳ ＭＬ ＤＴ ＡＭＳ
// 	 ＡＲ ＤＲ ＳＲ ＲＲ ＳＬ ＴＬ ＫＳ ＭＬ ＤＴ ＡＭＳ
// 	 ＡＲ ＤＲ ＳＲ ＲＲ ＳＬ ＴＬ ＫＳ ＭＬ ＤＴ ＡＭＳ
// 	 ＡＲ ＤＲ ＳＲ ＲＲ ＳＬ ＴＬ ＫＳ ＭＬ ＤＴ ＡＭＳ
// [書式2]	@ 音色番号 ＡＬＧ ＦＢ
// 	 ＡＲ ＤＲ ＳＲ ＲＲ ＳＬ ＴＬ ＫＳ ＭＬ ＤＴ ＤＴ２ ＡＭＳ
// 	 ＡＲ ＤＲ ＳＲ ＲＲ ＳＬ ＴＬ ＫＳ ＭＬ ＤＴ ＤＴ２ ＡＭＳ
// 	 ＡＲ ＤＲ ＳＲ ＲＲ ＳＬ ＴＬ ＫＳ ＭＬ ＤＴ ＤＴ２ ＡＭＳ
// 	 ＡＲ ＤＲ ＳＲ ＲＲ ＳＬ ＴＬ ＫＳ ＭＬ ＤＴ ＤＴ２ ＡＭＳ
// [書式3]	@ 音色番号 ＡＬＧ ＦＢ
// 	 ＡＲ ＤＲ ＲＲ ＳＬ ＴＬ ＫＳＬ ＭＬ ＫＳＲ ＥＧＴ ＶＩＢ ＡＭ
// 	 ＡＲ ＤＲ ＲＲ ＳＬ ＴＬ ＫＳＬ ＭＬ ＫＳＲ ＥＧＴ ＶＩＢ ＡＭ
// -------------------------------------------------------------------------------
// [備考]	任意の位置に、= 音色名 を表記する事が出来る。
// -------------------------------------------------------------------------------
// [範囲]	[書式1および2]	ＡＬＧ	････	0～7
// 			ＦＢ	････	0～7
// 			ＡＲ	････	0～31
// 			ＤＲ	････	0～31
// 			ＳＲ	････	0～31
// 			ＲＲ	････	0～15
// 			ＳＬ	････	0～15
// 			ＴＬ	････	0～127
// 			ＫＳ	････	0～3
// 			ＭＬ	････	0～15
// 			ＤＴ	････	-3～3 または 0～7
// 			ＡＭＳ	････	0～1
// 	[書式2]		ＤＴ２	････	0～3
// 	[書式3]		ＡＬＧ	････	0～1
// 			ＦＢ	････	0～7
// 			ＡＲ	････	0～15
// 			ＤＲ	････	0～15
// 			ＲＲ	････	0～15
// 			ＳＬ	････	0～15
// 			ＴＬ	････	0～63
// 			ＫＳＬ	････	0～3
// 			ＭＬ	････	0～15
// 			ＫＳＲ	････	0～1
// 			ＥＧＴ	････	0～1
// 			ＶＩＢ	････	0～1
// 			ＡＭ	････	0～1
// -------------------------------------------------------------------------------
#[derive(Debug, Clone)]
pub struct FmToneDefine {
    pub code: Code,

    pub tone_number: u8,
    pub algorism: u8, // 0..7
    pub feedback: u8, // 0..7

    pub name: Option<String>, // 任意の位置に、= 音色名 を表記する事が出来る。
}

#[derive(Debug)]
pub struct FmToneDefineDetails {
    code: Code,
    name: String,
    // 0～255
    value: u8,
}

// ===============================================================================
// §3-2	MML変数定義
// 	!
// -------------------------------------------------------------------------------
// [書式1]	!文字列		MML文字列
// [書式2]	!数値		MML文字列
// -------------------------------------------------------------------------------
// [文字列]	文字種・文字数は任意。先頭から半角３０文字まで判別。
// [範囲]		0～255
// -------------------------------------------------------------------------------
#[derive(Debug, Clone)]
pub struct Variable {
    pub code: Code,
    pub name: String,
    pub value: String,
}
